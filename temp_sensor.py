import os
import glob
import time
import datetime

# replace 28* with your device ID and name to suit
names = {}
names["28-3c02f649e86b"] = "Sensor 1"
names["28-3c87f6495dc2"] = "Sensor 2"
names["28-3c5df64940ef"] = "Sensor 3"
names["28-2b99f71e64ff"] = "Sensor 4"
names["28-3c26f649bffc"] = "Sensor 5"
names["28-3c7ff6495e42"] = "Sensor 6"
names["28-fb98f71e64ff"] = "Sensor 7"
names["28-3c86f6495f03"] = "Sensor 8"
names["28-4784f71e64ff"] = "Sensor 9"
names["28-a77df61e64ff"] = "Sensor 10"


## DO NOT USE (Generated by ChatGPT)
def read_temp_chatgpt_broken(devices, decimals = 1, sleeptime = 3):
    """Reads the temperator from multiple 1-wire devices"""

    for device in devices:
        while True:
            try:
                timepoint = datetime.datetime.now()
                with open(device, "r") as f:
                    print(device)
                    lines = f.readlines()
                while lines[0].strip()[-3:] != "YES":
                    time.sleep(0.2)
                    lines = read_temp_raw()
                timepassed = (datetime.datetime.now() - timepoint).total_seconds()
                if equals_pos != -1:
                    temp_string = lines[1][equals+2:]
                    temp = round(float(temp_string) / 1000.00, decimals)
                    print(time.strtime("%d/%m/%y@%H:%M:%S - ")+str(temp)+" C")
                    time.sleep(sleeptime - timepassed)
                    timepoint = datetime.datetime.now()
            except KeyboardInterrupt:
                    break

## Used from here:
def read_temp_raw(device):
    f = open(device, 'r')
    lines = f.readlines()
    f.close()
    return lines

def read_temp(device):
    lines = read_temp_raw(device)
    while lines[0].strip()[-3:] != 'YES':
        time.sleep(0.2)
        lines = read_temp_raw(device)
    equals_pos = lines[1].find('t=')
    if equals_pos != -1:
        temp_string = lines[1][equals_pos+2:]
        temp_c = float(temp_string) / 1000.0
        #temp_f = temp_c * 9.0 / 5.0 + 32.0
        return temp_c

def read_temp_multi(devices):
    sensors = []
    for device in devices:
	    name = device.split("/")[5]
	    if name in names.keys():
		    sensors.append({'name': names[name], 'temp': read_temp(device)})
    return sensors


if __name__ == "__main__":
    devices = glob.glob("/sys/bus/w1/devices/" + "28*" + "/w1_slave")

    while(True):
        print("=== Temperature ===")
        outputs = read_temp_multi(devices)
        for output in outputs:
            print("Device: " + output['name'] + " - " + str(output['temp']) + " C")
        time.sleep(3)
    
    ## TODO:  Database code into postgresql
    #  push to postgresql database
    #  create a table with the following columns
    #  id, device, temp, time
    #  id is autoincrementing
    #  device is the name of the device
    #  temp is the temperature
    #  time is the time the temperature was taken
    #  create a function that takes the outputs and pushes them to the database
    #cursor.execute("INSERT INTO temp (device, temp, time) VALUES (%s, %s, %s)", (output['name'], output['temp'], datetime.datetime.now()))
    #conn.commit()

    
